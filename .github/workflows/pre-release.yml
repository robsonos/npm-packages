name: Release pre-release

on:
  workflow_dispatch:
    inputs:
      skip-nx-cache:
        type: boolean
        description: 'Skip NX cache'
        default: false
      publish:
        type: boolean
        description: 'Publish to npm'
        default: true

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  HUSKY: 0

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Determine release channel
        id: get-channel
        run: |
          branch=${GITHUB_REF#refs/heads/}
          if [[ "$branch" != "alpha" && "$branch" != "beta" && "$branch" != "next" ]]; then
            echo "Error: Branch '$branch' is not a valid pre-release branch. Valid options are: alpha, beta, or next."
            exit 1
          fi
          echo "channel=$branch" >> $GITHUB_OUTPUT

      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm ci

      - name: Set up git bot user
        uses: snow-actions/git-config-user@v1.0.0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        if: ${{ !env.ACT }}
        uses: nrwl/nx-set-shas@v4

      - name: Generate coverage badge
        run: |
          npx nx affected -t coverage-badge --skipNxCache=${{ inputs.skip-nx-cache }}
          git add .

      - name: Create version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx nx release version prerelease --preid=${{ steps.get-channel.outputs.channel }} --git-tag

      - name: Get the tag that was just created
        id: get-latest-tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0)
          semver=${latest_tag#*@}
          echo "tag=$semver" >> $GITHUB_OUTPUT

      # - name: Get the last pre-release tag
      #   id: get-from-tag
      #   run: |
      #     if git rev-parse -q --verify "refs/tags/last-${{ steps.get-channel.outputs.channel }}" >/dev/null; then
      #       echo "tag=last-${{ steps.get-channel.outputs.channel }}" >> $GITHUB_OUTPUT
      #     else
      #       echo "tag=HEAD" >> $GITHUB_OUTPUT
      #     fi
      - name: Create changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx nx release changelog ${{ steps.get-latest-tag.outputs.tag }} \
            --git-commit \
            --git-tag=false \
            --git-push \
            --dry-run=${{ env.ACT || 'false'  }}
        #    --from=${{ steps.get-from-tag.outputs.tag }}

      # - name: Tag last-prerelease
      #   shell: bash
      #   run: git tag -f last-${{ steps.get-channel.outputs.channel }}

      # TODO: https://github.com/nrwl/nx/issues/22073
      - name: Push changes
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
          # force: true

      - name: Publish
        if: ${{ inputs.publish }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
        run: npx nx release publish \
          --tag ${{ steps.get-channel.outputs.channel }} \
          --skipNxCache=${{ inputs.skip-nx-cache }} \
          --dry-run=${{ env.ACT || 'false'  }}
